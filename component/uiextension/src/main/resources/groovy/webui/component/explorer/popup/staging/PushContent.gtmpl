<% import org.exoplatform.management.uiextension.PushContentPopupComponent;%>
<script>
	<% for(action in uicomponent.getActions()) {
		 String actionLabel = _ctx.appRes(uicomponent.getName() + ".action." + action);
		 String link = uicomponent.event(action);
		 link = link.substring(link.indexOf(":") + 1);
	%>
		 function execute<%=action%>Content() {
			 try {
				$link;
				<% if(action.equals("Push")) {%>
					window.setTimeout(execute<%=action%>Content, 2000);
				<% } %>
			 } catch(e) {
				 // Nothing to trace
			 }
		 }
	<% } %>
	<% if(uicomponent.isSynchronizationStarted()) { %>
		if(typeof executePushContentStarted == 'undefined') {
	 		executePushContent();
		}
	<% } %>
	executePushContentStarted = "started";
</script>
<style>
	.$uicomponent.id {
	}
	.$uicomponent.id .control-label {
		width: 40%;
		padding-right:10px;
	}
	.$uicomponent.id .ClearBoth {
		clear: both;
	}
	.$uicomponent.id .FR {
		float: right;
	}
	.$uicomponent.id .FL {
		float: left;
	}
	.SelectNodesComponent hr.withLabel {
		margin: 20px 5px; width: 82%;
	}
	.SelectNodesComponent input {
		margin-bottom:0;
	}
	.SelectNodesComponent .uiListGrid img {
		cursor:pointer;
	}
	.SelectNodesComponent .uiListGrid .lineLeft {
		cursor: default;
	}
	.SelectNodesComponent #selectNodesGrid .titleTable {
		height: 65px;
	}
	.SelectNodesComponent #selectNodesGrid .titleTable .lineLeft {
		height: 65px;
	}
	.SelectNodesComponent #selectNodesGrid .titleTable .columnName {
		height: auto;
	}
	.SelectNodesComponent #selectNodesGrid .uiBox {
		margin-bottom: 7px;
	}
	.SelectNodesComponent #selectNodesGrid i.uiIconSearch {
	    position: relative;
	    left: -22px;
	}
	.SelectNodesComponent #selectNodesGrid .actions {
		padding-left: 22px;
		width:auto;
	}
	.SelectNodesComponent #selectNodesGrid .headerActions {
		width:auto;
		height: 46px;
	}
	.SelectNodesComponent #selectNodesGrid .emptyRow {
		text-align: center;	
	}
	.SelectNodesComponent #selectNodesGrid .rowView {
		padding-left:3px;
		clear: both;
	}
	.SelectNodesComponent #uiSelectedNodesGrid .btn {
	    margin: 3px;
	}
	.SelectNodesComponent #uiSelectedNodesGrid .actions {
		width:50px;
		padding-left: 25px;
	}
</style>
<div class="uiForm $uicomponent.id">
   <% def field = uicomponent.findComponentById(PushContentPopupComponent.INFO_FIELD_NAME);
      if(field.getValue() != null && !field.getValue().isEmpty()) { %>
          <div class="alert alert-<%=uicomponent.messageType%>"><i class="uiIcon<%=org.apache.commons.lang.StringUtils.capitalize(uicomponent.messageType)%>"></i><%=field.getValue()%></div>
   <% } %>
	<% uiform.begin() %>
	<div class="form-horizontal">
     <div class="control-group">
       <label class="control-label" for="<%=PushContentPopupComponent.TARGET_SERVER_NAME_FIELD_NAME%>">
           <%=uicomponent.getLabel(PushContentPopupComponent.TARGET_SERVER_NAME_FIELD_NAME) %>
       </label>
       <div class="controls">
       	<%uiform.renderField(PushContentPopupComponent.TARGET_SERVER_NAME_FIELD_NAME) ; %>
       </div>
     </div>
    </div>
	<div class="uiAction uiActionBorder">
		<% for(action in uicomponent.getActions()) {
			String actionLabel = _ctx.appRes(uicomponent.getName() + ".action." + action) 
		%>
			<button type="button" onclick="execute<%=action%>Content()" class="btn"  href="javascript:void(0);">$actionLabel</button>
		<% } %>
	</div>
	<% uiform.end() %>
	<div class="control-group">
	     <% field = uicomponent.findComponentById("SelectNodesComponent");
	        if(field.isRendered()) { %>
	      <% uiform.renderField(field); %>
	     <% } %>
	</div>
</div>