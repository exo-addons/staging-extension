<% import org.exoplatform.management.uiextension.PushContentPopupComponent;%>
<script>
	executePushContentStarted = <%=uicomponent.isSynchronizationStarted()%>;
	<%
	 String closeLink = uicomponent.event("Close");
	 closeLink = closeLink.substring(closeLink.indexOf(":") + 1);
     String pushLink = uicomponent.event("Push");
     pushLink = pushLink.substring(pushLink.indexOf(":") + 1);
     pushLink = pushLink.replace(");", "function(){window.setTimeout(executePushContent, 2000);}");
	%>
	 function executeCloseContent() {
		$closeLink;
	 }

	 function executePushContent() {
		 try {
			if(executePushContentStarted) {
				$pushLink;
				executePushContentStarted = false;
			}
		 } catch(e) {
			 // Nothing to trace
		 }
	 }

	if(executePushContentStarted) {
		window.setTimeout(executePushContent, 2000);
	}
</script>
<style>
	.$uicomponent.id {
	}
	.$uicomponent.id .control-label {
		width: 40%;
		padding-right:10px;
	}
	.$uicomponent.id .ClearBoth {
		clear: both;
	}
	.$uicomponent.id .FR {
		float: right;
	}
	.$uicomponent.id .FL {
		float: left;
	}
	.SelectNodesComponent hr.withLabel {
		margin: 20px 5px; width: 82%;
	}
	.SelectNodesComponent input {
		margin-bottom:0;
	}
	.SelectNodesComponent .uiListGrid img {
		cursor:pointer;
	}
	.SelectNodesComponent .uiListGrid .lineLeft {
		cursor: default;
	}
	.SelectNodesComponent #selectNodesGrid .titleTable {
		height: 65px;
	}
	.SelectNodesComponent #selectNodesGrid .titleTable .lineLeft {
		height: 65px;
	}
	.SelectNodesComponent #selectNodesGrid .titleTable .columnName {
		height: auto;
	}
	.SelectNodesComponent #selectNodesGrid .uiBox {
		margin-bottom: 7px;
	}
	.SelectNodesComponent #selectNodesGrid i.uiIconSearch {
	    position: relative;
	    left: -22px;
	}
	.SelectNodesComponent #selectNodesGrid .actions {
		padding-left: 22px;
		width:auto;
	}
	.SelectNodesComponent #selectNodesGrid .headerActions {
		width:auto;
		height: 46px;
	}
	.SelectNodesComponent #selectNodesGrid .emptyRow {
		text-align: center;	
	}
	.SelectNodesComponent #selectNodesGrid .rowView {
		padding-left:3px;
		clear: both;
	}
	.SelectNodesComponent #uiSelectedNodesGrid .btn {
	    margin: 3px;
	}
	.SelectNodesComponent #uiSelectedNodesGrid .actions {
		width:50px;
		padding-left: 25px;
	}
</style>
<div class="uiForm $uicomponent.id">
	<% uiform.begin(); %>
	<div class="form-horizontal">
     <div class="control-group">
       <% def field = uicomponent.findComponentById(PushContentPopupComponent.INFO_FIELD_NAME);
       	  if(field.getValue() != null && !field.getValue().isEmpty()) { %>
        	  <div class="alert alert-info"><%=field.getValue()%></div>
       <% } %>
       <label class="control-label" for="<%=PushContentPopupComponent.TARGET_SERVER_NAME_FIELD_NAME%>">
           <%=uicomponent.getLabel(PushContentPopupComponent.TARGET_SERVER_NAME_FIELD_NAME) %>
       </label>
       <div class="controls">
       	<%uiform.renderField(PushContentPopupComponent.TARGET_SERVER_NAME_FIELD_NAME) ; %>
       </div>
     </div>
    </div>
	<% uiform.end(); %>
    <% field = uicomponent.findComponentById("SelectNodesComponent");
    if(field.isRendered()) { %>
    	<div class="control-group">
    	      <% uiform.renderField(field); %>
    	</div>
        <div class="uiAction uiActionBorder">
            <button type="button" onclick="executePushContentStarted = true;executePushContent()" class="btn primary"><%=_ctx.appRes(uicomponent.getName() + ".action.Push")%></button>
            <button type="button" onclick="executeCloseContent()" class="btn"><%=_ctx.appRes(uicomponent.getName() + ".action.Close")%></button>
        </div>
    <% } %>
</div>